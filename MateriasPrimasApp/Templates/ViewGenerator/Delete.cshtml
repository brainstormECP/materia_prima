@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
        @:@@{
        @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
            @:Layout = "@Model.LayoutPageFile";
        }
        @:}
        @:
        @:
    }
    else
    {
        @:@@{
        @:Layout = null;
        @:}
        @:
        @:<!DOCTYPE html>
        @:
        @:<html>
        @:<head>
            @:<meta name="viewport" content="width=device-width" />
            @:<title>@Model.ViewName</title>
        @:</head>
        @:<body>
            @:
            //    PushIndent("    ");
        }
}
<hr />
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <div class="portlet box red">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-trash-o"></i>Eliminar @Model.ViewDataTypeShortName
                </div>
            </div>
            <div class="portlet-body">
                <h3 class="text-center">Desea eliminar este elemento?</h3>
                @{
                    Dictionary<string, IPropertyMetadata> propertyLookup = ((IModelMetadata)Model.ModelMetadata).Properties.ToDictionary(x => x.PropertyName, x => x);
                    Dictionary<string, INavigationMetadata> navigationLookup = ((IModelMetadata)Model.ModelMetadata).Navigations.ToDictionary(x => x.AssociationPropertyName, x => x);
                    @:<div class="row">
                        foreach (var item in Model.ModelMetadata.ModelType.GetProperties())
                        {
                            if (propertyLookup.TryGetValue(item.Name, out IPropertyMetadata property)
                                && property.Scaffold && !property.IsForeignKey && !property.IsPrimaryKey)
                            {
                                @:<div class="col-md-6 text-right">
                                    <dt>
                                        @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                                    </dt>
                                @:</div>
                                @:<div class="col-md-6 text-left">
                                    <dd>
                                        @@Html.DisplayFor(model => model.@GetValueExpression(property))
                                    </dd>
                                @:</div>
                            }
                            else if (navigationLookup.TryGetValue(item.Name, out INavigationMetadata navigation))
                            {
                                @:<div class="col-md-6 text-right">
                                    <dt>
                                        @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
                                    </dt>
                                @:</div>
                                @:<div class="col-md-6 text-left">
                                    <dd>
                                        @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                                    </dd>
                                @:</div>
                            }
                        }
                    @:</div>
                    @:<br />
                    @:<br />
                    @:<div class="text-center">
                        @:<form asp-action="@Model.ViewName">
                            foreach (var property in Model.ModelMetadata.Properties)
                            {
                                if (property.IsPrimaryKey)
                                {
                                    @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                                }
                            }
                            @:<div class="form-group">
                                @:<a asp-action="Index" class="btn btn-info">Atrás</a>
                                @:<input type="submit" value="Eliminar" class="btn btn-danger" />
                            @:</div>
                        @:</form>
                    @:</div>
                }
            </div>
        </div>
        <div class="col-md-2"></div>
    </div>
</div>

<div>

    @{
    @:</div>
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
    @:</body>
@:</html>
}
    }
    @functions
    {
    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
    }